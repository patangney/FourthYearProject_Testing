

// Animate the size, inside
.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

// Animate the size, outside
.pulse:hover,
.pulse:focus {
  animation: pulse 1s;
  box-shadow: 0 0 0 2em rgba(#fff, 0);
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 var(--hover);
  }
}

// Stack multiple shadows, one from the left, the other from the right
.close:hover,
.close:focus {
  box-shadow: inset -3.5em 0 0 0 var(--hover), inset 3.5em 0 0 0 var(--hover);
}

// Size can also be negative; see how it's smaller than the element
.raise:hover,
.raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
  transform: translateY(-0.25em);
}

// Animating from the bottom
.up:hover,
.up:focus {
  box-shadow: inset 0 -3.25em 0 0 var(--hover);
}

// And from the left
.slide:hover,
.slide:focus {
  box-shadow: inset 12.5em 0 0 0 var(--hover);
}

// Multiple shadows, one on the outside, another on the inside
.offset {
  box-shadow: 0.3em 0.3em 0 0 var(--color), inset 0.3em 0.3em 0 0 var(--color);
  &:hover,
  &:focus {
    box-shadow: 0 0 0 0 var(--hover), inset 6em 3.5em 0 0 var(--hover);
  }
}

//=== Set button colors
// If you wonder why use Sass vars or CSS custom properties...
// Make a map with the class names and matching colors
$colors: (  
            fill: #68D8D6, 
            pulse: #68D8D6, 
            close: #68D8D6, 
            raise: #68D8D6, 
            up: #68D8D6, 
            slide: #68D8D6, 
            offset: #68D8D6
);
// Sass variables compile to a static string; CSS variables are dynamic and inherited
// Loop through the map and set CSS custom properties using Sass variables
@each $button,
$color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 10deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
.btn-animate {
  color: var(--color);
  transition: 0.25s;
  &:hover,
  &:focus {
    border-color: var(--hover);
    color: $white;
  }
}

// Basic button styles
.btn-animate {
  display: inline-block;
  min-width: 170px;
  height: 55px;
  color: $white;
  border: 3px solid #fff;
  border-radius: 2px;
  padding: 0 30px;
  text-transform: uppercase;
  font-size: 14px;
  font-weight: 700;
  line-height: 49px;
  
}

h1 {
  font-weight: 400;
}

code {
  color: #e4cb58;
  font: inherit;
}
